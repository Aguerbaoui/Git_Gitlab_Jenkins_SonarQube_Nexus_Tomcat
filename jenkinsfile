pipeline {

    agent any
    stages {
    
    stage('git clone') {
        steps {
        git branch: 'main', credentialsId: 'jenkins', url: 'git@gitlab.com:Aguerbaoui/projet_j2e.git'
        }
    }

    stage('SAST SonarQube') {
         steps {
         withMaven(maven: 'Maven') {
         sh '''mvn clean verify sonar:sonar \\
                 -Dsonar.projectKey=MyFirstProject \\
                 -Dsonar.host.url=http://3.101.76.18:9000 \\
                 -Dsonar.login=sqp_50f29b62e01efbbfcf108139b4c45a4c8661892c'''
    }
         }
    }
    stage('Quality Gate') {
        steps {

                waitForQualityGate abortPipeline: true, credentialsId: 'sonar'
        }

    }
    
    stage('Build') {
        steps {
            withMaven(maven: 'Maven') {
                sh 'mvn clean install package'
            }
        }
    }
    
    stage('Deploy') {
        steps {
            deploy adapters: [tomcat8(credentialsId: 'tomcat', 
            path: '', 
            url: 'http://54.67.30.95:8080/')], 
            contextPath: null, 
            war: '**/*.war'
            }
    }
    } 
     /* post {

     success {
         
         slackSend message: " Successful pipeline: Job ${env.JOB_NAME}, Build Jenkins NÂ°: ${env.BUILD_NUMBER}: -To see more details,Check console output at:${env.BUILD_URL}"
    
    
    }
          }*/

     post {
        always {
            emailext body: 'A Test EMail', recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']], subject: 'Test'
        }
    }

        

} 

